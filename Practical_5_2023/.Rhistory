q()
library(dplyr)
library(rio)
library(magrittr)
library(readxl)
StopS <- read_excel("StopSearchWk3.xlsx")
names(StopS)   # check what is in the file.
StopS <- StopS[,c(1,2,7:15)]
names(StopS)  # I check that I have achieved what I intended
names(StopS)[c(4:6,8,10,11)] <- c('AgeRange', 'SelfEthnicity', 'OfficerDefEthnic',
'AimSearch','OutcomeLinkAim','RemovalMoreClothing')
StopS<- StopS%>% mutate(Gender=factor(Gender),AgeRange=factor(AgeRange),
Legislation = factor(Legislation), Outcome = factor(Outcome),Type=factor(Type),
AimSearch=factor(AimSearch),
SelfEthnicity=factor(SelfEthnicity),OfficerDefEthnic=factor(OfficerDefEthnic))
str(StopS)
Types <- factor(StopS$Type,labels=c("PersonVehicle","Person"))
table(Types,StopS$Type) # This is an example of checking you have got it right!
StopS <- StopS %>% mutate(Type=factor(StopS$Type,labels=c("PersonVehicle","Person")) )
library(lubridate)
help("lubridate")  # You can find out about lubridate this way, or through CRAN.
StopS$dayDate = date(StopS$Date)
StopS$hourDay = as.numeric(substring(StopS$Date,12,13)) # Find a better way?
save(StopS, file='myStopSearch.rda') # save for future use.
table(StopS$Gender,StopS$AgeRange)
table(StopS$AgeRange,StopS$Gender)
proportions(table(StopS$Gender,StopS$AgeRange),1)
100*proportions(table(StopS$Gender,StopS$AgeRange),2)
plot(table(StopS$Legislation,StopS$AgeRange,StopS$Gender),
main="Distribution of age by legislation for 401 people stopped")
knitr::opts_chunk$set(echo = TRUE, fig.width = 8, fig.height = 5)
svg(file = "JLHa.svg", width = 8, height = 5)
print( plot(table(StopS$Legislation,StopS$AgeRange),
main="Distribution of age by legislation for 401 people stopped"))
##  This writes the graph to the file
invisible(dev.off())          ##  This is essential, to close the file
plot(1:10,2:11,xlab="number)
plot(1:10,2:11,xlab="number")
dev.off()
pdf("JLH.pdf")
plot(1:10,2:11,xlab="number")
dev.off()
svg(file = "JLHb.svg", width = 5, height = 5)
print( plot(table(StopS$Legislation,StopS$AgeRange),
main="Distribution of age by legislation for 401 people stopped"))
##  This writes the graph to the file
invisible(dev.off())          ##  This is essential, to close the file
svg(file = "JLHb.svg", width = 8, height = 5)
print( plot(table(StopS$Legislation,StopS$AgeRange,StopS$Gender),
main="Distribution of age by legislation for 401 people stopped"))
##  This writes the graph to the file
invisible(dev.off())          ##  This is essential, to close the file
# Project 2.
cast2m <- read.csv("CAST2m.csv") # names(cast2m)
setwd("~/Downloads/ST332")
# Project 2.
cast2m <- read.csv("CAST2m.csv") # names(cast2m)
summary(cast2m) # 12 missing on sport at baseline.
cast2m$m9symp <- is.na(cast2m$symp9); cast2m$m9pain <- is.na(cast2m$pain9)
cast2m$m9sport <- is.na(cast2m$sport9) # Use own indicator.
cast2m$m9adl <- is.na(cast2m$adl9); cast2m$m9qual <- is.na(cast2m$qual9)
cast2m$Sex <- factor(sex,labels=c("Women","Men")) # labels.
summary(cast2m)
attach(cast2m)  #  detach(cast2m) ; # Use own indicator.
#cast2m<-cast2m[c(1:9,15:19)]
#write.csv(cast2m,"CAST2m.csv",row.names=FALSE)
table(m9pain,m9symp); table(m9pain,m9qual); table(m9symp,m9qual)
table(is.na(Yscore),m9adl)
if (length(x) != length(y))
)
emplogit = function(x, y, binsize = NULL, ci = FALSE, probit = FALSE,
prob = FALSE, main = NULL, xlab = "", ylab = ""){
# x         vector with values of the independent variable
# y         vector of binary responses
# binsize   integer value specifying bin size (optional)
# ci        logical value indicating whether to plot approximate
#           confidence intervals (not supported as of 02/08/2015)
# probit    logical value indicating whether to plot probits instead
#           of logits
# prob      logical value indicating whether to plot probabilities
#           without transforming
#
# the rest are the familiar plotting options
if (length(x) != length(y))
stop("x and y lengths differ")
if (any(y < 0 | y > 1))
stop("y not between 0 and 1")
if (length(x) < 100 & is.null(binsize))
stop("Less than 100 observations: specify binsize manually")
if (is.null(binsize)) binsize = min(round(length(x)/10), 50)
if (probit){
link = qnorm
if (is.null(main)) main = "Empirical probits"
} else {
link = function(x) log(x/(1-x))
if (is.null(main)) main = "Empirical logits"
}
sort = order(x)
x = x[sort]
y = y[sort]
a = seq(1, length(x), by=binsize)
b = c(a[-1] - 1, length(x))
prob = xmean = ns = rep(0, length(a)) # ns is for CIs
for (i in 1:length(a)){
range = (a[i]):(b[i])
prob[i] = mean(y[range])
xmean[i] = mean(x[range])
ns[i] = b[i] - a[i] + 1 # for CI
}
extreme = (prob == 1 | prob == 0)
prob[prob == 0] = min(prob[!extreme])
prob[prob == 1] = max(prob[!extreme])
g = link(prob) # logits (or probits if probit == TRUE)
linear.fit = lm(g[!extreme] ~ xmean[!extreme])
b0 = linear.fit$coef[1]
b1 = linear.fit$coef[2]
loess.fit = loess(g[!extreme] ~ xmean[!extreme])
plot(xmean, g, main=main, xlab=xlab, ylab=ylab)
abline(b0,b1)
lines(loess.fit$x, loess.fit$fitted, lwd=2, lty=2)
}
table(is.na(Yscore),m9adl)
emplogit = function(age, m9adl,  binsize =10, ci = FALSE, probit = FALSE,
prob = FALSE, main = NULL, xlab = "Age", ylab = "Empirical logit")
)
source("/home/stsbm/R/emplogitplot1.R")
emplogitplot1(m9pain~age,ngroups=20,ylab="empirical logit for missing pain score",
xlab="Age (years)")
emplogitplot1(m9adl~age,ngroups=20,ylab="empirical logit for missing pain score",
xlab="Age (years)")
emplogitplot1(m9adl~age,ngroups=20,ylab="Empirical logit for missing ADL score",
xlab="Age (years)")
emplogitplot1(m9adl~age,ngroups=20,ylab="Empirical logit for missing ADL score",
xlab="Age (years)",main="Missing ADL scoreby age")
emplogitplot1(m9adl~age,ngroups=10,ylab="Empirical logit for missing ADL score",
xlab="Age (years)"main="Missing ADL score by age")
emplogitplot1(m9adl~age,ngroups=10,ylab="Empirical logit for missing ADL score",
xlab="Age (years)",main="Missing ADL score by age")
bks <- quantile(age,probs=seq(0,1,0.04))
bks
emplogitplot1(m9adl~age,ngroups="all",ylab="Empirical logit for missing ADL score",
xlab="Age (years)",main="Missing ADL score by age")
adlm <- emplogitplot1(m9adl~age,ngroups=20,ylab="Empirical logit for missing ADL score",
xlab="Age (years)",main="Missing ADL score by age",out=TRUE)
adlm
adl15 <- emplogitplot1(m9adl~age,ngroups=15,ylab="Empirical logit for missing ADL score",
xlab="Age (years)",main="Missing ADL score by age",out=TRUE)
summary(badl)
plot(age,badl)
summary(cast2m)
emplogitplot1(m9adl~bpain,ngroups=10,ylab="Empirical logit for missing ADL score",
xlab="Pain at baseline",main="Missing ADL score by pain")
emplogitplot1(m9adl~badl,ngroups=20,ylab="Empirical logit for missing ADL score",
xlab="Pain at baseline",main="Missing ADL score by pain")
plot(bpain,badl)
plot(bpain,adl9)
plot(badl,adl9)
summary(badl)
summary(bpain)
names(cast2m)
cast2m$BMI <- round(cast2m$weight/cast2m$height^2,1)
names(cast2m)
detach(cast2m)
detach(cast2m)
attach(cast2m)
emplogitplot1(m9adl~height,ngroups=20,ylab="Empirical logit for missing ADL score",
xlab="Height (m)",main="Missing ADL score by height")
summary(height)
emplogitplot1(m9adl~height,ngroups=10,ylab="Empirical logit for missing ADL score",
xlab="Height (m)",main="Missing ADL score by height")
detach(cast2m)
detach(cast2m)
cast2m$BMI <- round(cast2m$weight/(cast2m$height/100)^2,1)
summary(cast2m$BMI)
names(cast2m)
# Project 2.
cast2m <- read.csv("CAST2m.csv") # names(cast2m)
heightbrks <- quantile(age,probs=seq(0,1,0.05))
attach(cast2m)
heightbrks <- quantile(age,probs=seq(0,1,0.05))
heightbrks
quantile(height,probs=seq(0,1,0.05))
stem(height)
table(height)
cast2m$height <- round(cast2m$height,2)
write.csv(castss,"CAST2m.csv",row.names=FALSE)
write.csv(cast2m,"CAST2m.csv",row.names=FALSE)
# Project 2.
cast2m <- read.csv("CAST2m.csv") # names(cast2m)
summary(cast2m) # 12 missing on sport at baseline.
heightbrks <- quantile(height,probs=seq(0,1,0.05))
heightbrks
detach(cast2m)
detach(cast2m)
attach(cast2m)
table(heights)
table(height)
heightbrks
htbrks <- c(147.2,152.5, 156.0,160.0,162,165.2,168,171,173,176,179,180.5,182.9,186,187.99,201)
table(htbrks,height)
table(htbrks,exclude=NULL)
hist(height,breaks=htbrks)
hgt <- cut(height,breaks=htbrks)
table(hgt)
htbrks <- c(147.2,152.5, 156.0,160.0,162.6,165.2,168,171,173,176,179,180.5,182.9,186,187.99,201)
hgt <- cut(height,breaks=htbrks)
table(hgt)
table(height)
htbrks <- c(147.2,152.5, 156.0,160.3,162.6,165.2,168,171,173,176,179,180.5,182.9,186,187.99,201)
hgt <- cut(height,breaks=htbrks)
table(hgt)
dim(table(hgt))
table(cut(height,breaks=htbrks))
emplogitplot1(m9adl~height,breaks=htbrks,ylab="Empirical logit for missing ADL score",
xlab="Height (cm)",main="Missing ADL score by height")
names(cast2m)
cast2m$m9symp <- is.na(cast2m$symp9); cast2m$m9pain <- is.na(cast2m$pain9)
cast2m$m9sport <- is.na(cast2m$sport9) # Use own indicator.
cast2m$m9adl <- is.na(cast2m$adl9); cast2m$m9qual <- is.na(cast2m$qual9)
cast2m$Sex <- factor(sex,labels=c("Women","Men")) # labels.
write.csv(castss,"CAST2m.csv",row.names=FALSE)
write.csv(cast2m,"CAST2m.csv",row.names=FALSE)
cast2m$Sex <- factor(sex,labels=c("Women","Men")) # labels.
summary(cast2m) # 12 missing on sport at baseline.
cast2m<-cast2m[c(1:9,15:19)]
summary(cast2m) # 12 missing on sport at baseline.
names(casat2m)
names(cast2m)
cast2m <- read.csv("CAST2m.csv") ; names(cast2m)
cast2m<-cast2m[,c(1:6,20:21)]; names(cast2m)
cast2m <- read.csv("CAST2m.csv") ; names(cast2m)
names(cast2m[,c(1:6,20:22)])
names(cast2m[,c(1:6,20,22)])
names(cast2m[,c(1:6,16,20,22)])
cast2M<-cast2m[,c(1:6,16,20,22)]; names(cast2m)
names(cast2M)
write.csv(cast2M,"CAST2M.csv",row.names=FALSE)
hist(height,breaks=htbrks)
attach(casat2M)
attach(cast2M)
detach(cast2m)
emplogitplot1(m9adl~height,breaks=htbrks,ylab="Empirical logit for missing ADL score",
xlab="Height (cm)",main="Missing ADL score by height")
emplogitplot1(m9adl~weight,breaks=htbrks,ylab="Empirical logit for missing ADL score",
xlab="Weight (kg)",main="Missing ADL score by weight")
summary(weight)
emplogitplot1(m9adl~weight,groups=15,ylab="Empirical logit for missing ADL score",
xlab="Weight (kg)",main="Missing ADL score by weight")
emplogitplot1(m9adl~weight,ngroups=15,ylab="Empirical logit for missing ADL score",
xlab="Weight (kg)",main="Missing ADL score by weight")
emplogitplot1(m9adl~bmi,ngroups=15,ylab="Empirical logit for missing ADL score",
xlab="BMI kg/m^2",main="Missing ADL score by BMI")
## marking.
adl <- cast2M
madl1 <- glm(m9adl~age,family="binomial",data=adl) ; summary(madl1)
madl2 <- glm(m9adl~age+Sex,family="binomial",data=adl) ; summary(madl2) ; anova(madl2,madl1)
anova(madl1,madl2)
madl3 <- glm(m9adl~age*Sex,family="binomial",data=adl) ; summary(madl3) ; anova(madl1,madl3)
madl4 <- glm(m9adl~age+Sex+height+weight+bmi+bpain,family="binomial",data=adl) ; summary(madl4)
anova(madl4); anova(madl1,madl4)
summary(adl)
## marking.
adl <- subset(cast2M,subset=!is.na(bpain))
summary(adl)
adl$Sex <- factor(adl$Sex)
summary(adl)
madl1 <- glm(m9adl~age,family="binomial",data=adl) ; summary(madl1)
madl2 <- glm(m9adl~age+Sex,family="binomial",data=adl) ; summary(madl2) ; anova(madl1,madl2)
madl3 <- glm(m9adl~age*Sex,family="binomial",data=adl) ; summary(madl3) ; anova(madl1,madl3)
madl4 <- glm(m9adl~age+Sex+height+weight+bmi+bpain,family="binomial",data=adl) ; summary(madl4)
anova(madl4); anova(madl1,madl4)
madl5 <- glm(m9adl~age+Sex+height,family="binomial",data=adl) ; summary(madl5); anova(madl5)
madl5 <- glm(m9adl~age+Sex+bpain,familpainy="binomial",data=adl) ; summary(madl5); anova(madl5)
madl5 <- glm(m9adl~age+Sex+bpain,family="binomial",data=adl) ; summary(madl5); anova(madl5)
madl6 <- glm(m9adl~age+Sex+bmi,family="binomial",data=adl) ; summary(madl6); anova(madl6)
madl1 <- glm(m9adl~bmi,family="binomial",data=adl) ; summary(madl1)
anova(madl5)
madl5 <- glm(m9adl~age+bpain,family="binomial",data=adl) ; summary(madl5); anova(madl5)
madl6 <- glm(m9adl~age+bpain+Sex,family="binomial",data=adl) ; summary(madl6); anova(madl6)
madl3 <- glm(m9adl~age*Sex,family="binomial",data=adl) ; summary(madl3) ; anova(madl1,madl3)
summary(madl1)
madl1 <- glm(m9adl~bpain,family="binomial",data=adl) ; summary(madl1)
madl5 <- glm(m9adl~age+bpain,family="binomial",data=adl) ; summary(madl5); anova(madl5)
q()
